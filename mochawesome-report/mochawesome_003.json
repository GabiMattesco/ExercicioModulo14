{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-03T23:22:38.075Z",
    "end": "2022-05-03T23:22:40.923Z",
    "duration": 2848,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "084dc70c-af2f-469a-98ef-a5bd9f7adc64",
      "title": "",
      "fullFile": "cypress/integration/exercicio-api.spec.js",
      "file": "cypress/integration/exercicio-api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "188a8b0a-4d47-45d1-9b7e-8f5b986c736f",
          "title": "Testes da Funcionalidade Usuários",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de usuários",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar contrato de usuários",
              "timedOut": null,
              "duration": 1815,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('usuarios').then(response => {\n  return _usuarios.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "dd6fc8ec-599d-482f-9ebd-f8e4a8bfba4c",
              "parentUUID": "188a8b0a-4d47-45d1-9b7e-8f5b986c736f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve listar usuários cadastrados",
              "fullTitle": "Testes da Funcionalidade Usuários Deve listar usuários cadastrados",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'usuarios'\n}).then(response => {\n  expect(response.status).to.equal(200);\n});",
              "err": {},
              "uuid": "2e458372-5447-49fa-85f9-a10fce5a3611",
              "parentUUID": "188a8b0a-4d47-45d1-9b7e-8f5b986c736f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Testes da Funcionalidade Usuários Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuario = `Usuario EBAC ${Math.floor(Math.random() * 1000000)}`;\ncy.request({\n  method: 'POST',\n  url: 'usuarios',\n  body: {\n    \"nome\": usuario,\n    \"email\": faker.internet.email(),\n    \"password\": \"teste#$%\",\n    \"administrador\": \"true\"\n  }\n}).then(response => {\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n  expect(response.status).to.equal(201);\n});",
              "err": {},
              "uuid": "15f71afe-8c2e-4ca0-8c6d-746985b11346",
              "parentUUID": "188a8b0a-4d47-45d1-9b7e-8f5b986c736f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar um usuário com email inválido",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar um usuário com email inválido",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'usuarios',\n  body: {\n    \"nome\": \"Bernardo Gomes\",\n    \"email\": \"beltrano@qa.com.br\",\n    \"password\": \"xxxx\",\n    \"administrador\": \"true\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "e90caa4a-f85c-4b0c-ab10-9af130755385",
              "parentUUID": "188a8b0a-4d47-45d1-9b7e-8f5b986c736f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve editar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 173,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('usuarios').then(response => {\n  let id = response.body.usuarios[0]._id;\n  cy.request({\n    method: 'PUT',\n    url: `usuarios/${id}`,\n    body: {\n      \"nome\": \"Fulano da Silva Gomes\",\n      \"email\": \"fulano@qa.com.br\",\n      \"password\": \"@@@!!!F\",\n      \"administrador\": \"true\"\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "c2452359-4d28-4e3a-ae7b-0c7eb2f70f91",
              "parentUUID": "188a8b0a-4d47-45d1-9b7e-8f5b986c736f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve deletar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('usuarios').then(response => {\n  let id = response.body.usuarios[0]._id;\n  cy.request({\n    method: 'DELETE',\n    url: `usuarios/${id}`,\n    body: {\n      \"nome\": \"Fulano da Silva Gomes\",\n      \"email\": \"fulano@qa.com.br\",\n      \"password\": \"@@@!!!F\",\n      \"administrador\": \"true\"\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "84c4026e-c4c7-494e-a61c-256266fae6d5",
              "parentUUID": "188a8b0a-4d47-45d1-9b7e-8f5b986c736f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd6fc8ec-599d-482f-9ebd-f8e4a8bfba4c",
            "2e458372-5447-49fa-85f9-a10fce5a3611",
            "15f71afe-8c2e-4ca0-8c6d-746985b11346",
            "e90caa4a-f85c-4b0c-ab10-9af130755385",
            "c2452359-4d28-4e3a-ae7b-0c7eb2f70f91",
            "84c4026e-c4c7-494e-a61c-256266fae6d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2652,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}